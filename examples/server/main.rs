//! Main binary entry point for authress_local implementation.

#![allow(missing_docs)]

mod server;
mod databases;
mod authentication;
mod authentication_controller;

use lazy_static::lazy_static;
use log::info;
use tokio::task;

lazy_static! {
    pub static ref DATABASES: crate::databases::Databases = crate::databases::Databases::default();
}

/// Create custom server, wire it to the autogenerated router,
/// and pass it to the web server.
#[tokio::main]
async fn main() {
    simple_logger::SimpleLogger::new().env().init().unwrap();

    ctrlc::set_handler(move || {
        println!("Stopping Authress Local container.");
        std::process::exit(0);
    }).unwrap();

    let task = task::spawn(async {
        let addr = "0.0.0.0:8888";
        server::create(addr, &DATABASES).await;
    });

    const VERSION: &str = env!("CARGO_PKG_VERSION");

    info!("Authress Local (Version: {}) is now running on localhost:8888", VERSION);
    task.await.unwrap();
}
