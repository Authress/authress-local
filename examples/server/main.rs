//! Main binary entry point for authress_local implementation.

#![allow(missing_docs)]

use clap::{App, Arg};

mod server;
mod databases;

use lazy_static::lazy_static;

lazy_static! {
    pub static ref DATABASES: crate::databases::Databases = crate::databases::Databases::default();
}

/// Create custom server, wire it to the autogenerated router,
/// and pass it to the web server.
#[tokio::main]
async fn main() {
    simple_logger::SimpleLogger::new().env().init().unwrap();

    let matches = App::new("server")
        .arg(Arg::with_name("https")
            .long("https")
            .help("Whether to use HTTPS or not"))
        .get_matches();

    let addr = "127.0.0.1:8080";

    server::create(addr, matches.is_present("https"), &DATABASES).await;
}
